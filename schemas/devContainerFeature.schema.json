{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Development Container Feature Metadata",
  "description": "Development Container Features Metadata (devcontainer-feature.json). See https://containers.dev/implementors/features/ for more information.",
    "definitions": {
    "Feature": {
      "additionalProperties": false,
      "properties": {
        "capAdd": {
					"description": "Passes docker capabilities to include when creating the dev container.",
					"examples": [ "SYS_PTRACE" ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "containerEnv": {
          "description": "Container environment variables.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "customizations": {
          "description": "Tool-specific configuration. Each tool should use a JSON object subproperty with a unique name to group its customizations.",
          "additionalProperties": true,
          "type": "object"
        },
        "description": {
          "description": "Description of the Feature. For the best appearance in an implementing tool, refrain from including markdown or HTML in the description.",
          "type": "string"
        },
        "documentationURL": {
          "description": "URL to documentation for the Feature.",
          "type": "string"
        },
        "entrypoint": {
          "description": "Entrypoint script that should fire at container start up.",
          "type": "string"
        },
        "id": {
          "description": "ID of the Feature. The id should be unique in the context of the repository/published package where the feature exists and must match the name of the directory where the devcontainer-feature.json resides.",
          "type": "string"
        },
        "init": {
          "description": "Adds the tiny init process to the container (--init) when the Feature is used.",
          "type": "boolean"
        },
        "installsAfter": {
          "description": "Array of ID's of Features that should execute before this one. Allows control for feature authors on soft dependencies between different Features.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "licenseURL": {
          "description": "URL to the license for the Feature.",
          "type": "string"
        },
        "mounts": {
          "description": "Mounts a volume or bind mount into the container.",
          "items": {
            "$ref": "#/definitions/Mount"
          },
          "type": "array"
        },
        "name": {
          "description": "Display name of the Feature.",
          "type": "string"
        },
        "options": {
          "description": "Possible user-configurable options for this Feature. The selected options will be passed as environment variables when installing the Feature into the container.",
          "additionalProperties": {
            "$ref": "#/definitions/FeatureOption"
          },
          "type": "object"
        },
        "privileged": {
          "description": "Sets privileged mode (--privileged) for the container.",
          "type": "boolean"
        },
        "securityOpt": {
          "description": "Sets container security options to include when creating the container.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "description": "The version of the Feature. Follows the semanatic versioning (semver) specification.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "version"
      ],
      "type": "object"
    },
    "FeatureOption": {
      "anyOf": [
        {
          "description": "Option value is represented with a boolean value.",
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Default value if the user omits this option from their configuration.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the option displayed to the user by a supporting tool.",
              "type": "string"
            },
            "type": {
              "description": "The type of the option. Can be 'boolean' or 'string'.  Options of type 'string' should use the 'enum' or 'proposals' property to provide a list of allowed values.",
              "const": "boolean",
              "type": "string"
            }
          },
          "required": [
            "type",
            "default"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Default value if the user omits this option from their configuration.",
              "type": "string"
            },
            "description": {
              "description": "A description of the option displayed to the user by a supporting tool.",
              "type": "string"
            },
            "enum": {
              "description": "Allowed values for this option.  Unlike 'proposals', the user cannot provide a custom value not included in the 'enum' array.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of the option. Can be 'boolean' or 'string'.  Options of type 'string' should use the 'enum' or 'proposals' property to provide a list of allowed values.",
              "const": "string",
              "type": "string"
            }
          },
          "required": [
            "type",
            "enum",
            "default"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Default value if the user omits this option from their configuration.",
              "type": "string"
            },
            "description": {
              "description": "A description of the option displayed to the user by a supporting tool.",
              "type": "string"
            },
            "proposals": {
              "description": "Suggested values for this option.  Unlike 'enum', the 'proposals' attribute indicates the installation script can handle arbitrary values provided by the user.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "description": "The type of the option. Can be 'boolean' or 'string'.  Options of type 'string' should use the 'enum' or 'proposals' property to provide a list of allowed values.",
              "const": "string",
              "type": "string"
            }
          },
          "required": [
            "type",
            "proposals",
            "default"
          ],
          "type": "object"
        }
      ]
    },
    "Mount": {
      "description": "Mounts a volume or bind mount into the container.",
      "additionalProperties": false,
      "properties": {
        "source": {
          "description": "Mount source.",
          "type": "string"
        },
        "target": {
          "description": "Mount target.",
          "type": "string"
        },
        "type": {
          "description": "Type of mount. Can be 'bind' or 'volume'.",
          "enum": [
            "bind",
            "volume"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "source",
        "target"
      ],
      "type": "object"
    }
  },
  "oneOf": [
    {
      "type": "object",
      "$ref": "#/definitions/Feature",
      "additionalProperties": false
    }
  ]
}
